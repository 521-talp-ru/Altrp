{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/Resource.js","webpack:///./resources/modules/front-app/src/js/classes/Template.js","webpack:///./resources/modules/front-app/src/js/classes/Area.js","webpack:///./resources/modules/front-app/src/js/classes/Route.js","webpack:///./resources/modules/front-app/src/js/classes/Routes.js"],"names":["Resource","data","this","route","id","url","fetch","method","headers","then","res","ok","Promise","reject","text","status","json","_token","options","body","JSON","stringify","Template","Area","areaData","area","settings","template","parse","Route","areas","_area","push","areaFabric","Routes","resource","loadRoutes","getAll","routesData","routes","_data","routeFabric","appStore","dispatch","changeAppRoutes","err","console","error"],"mappings":"0QAgIeA,E,WAnHb,WAAYC,GAGV,G,4FAHe,SAEfC,KAAKC,MAAQF,EAAKE,OACbD,KAAKC,MACR,KAAM,Y,mDAONC,GACF,IAAKA,EACH,KAAM,mBAGR,IAOIC,EAAMH,KAAKC,MAAQ,IAAMC,EAC7B,OAAOE,MAAMD,EARC,CACZE,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAKOC,MAAK,SAAAC,GAC9B,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,+BAQb,IAOIX,EAAMH,KAAKC,MACf,OAAOG,MAAMD,EARC,CACZE,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAKOC,MAAK,SAAAC,GAC9B,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,2BAOVf,GACHA,EAAKgB,OAASA,OACd,IAAIC,EAAU,CACZX,OAAQ,OACRY,KAAMC,KAAKC,UAAUpB,GACrBO,QAAS,CACP,eAAgB,qBAGpB,OAAOF,MAAMJ,KAAKC,MAAOe,GAAST,MAAK,SAAAC,GACrC,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,0BAOXZ,EAAIH,GACNA,EAAKgB,OAASA,OACd,IAAIC,EAAU,CACZX,OAAQ,MACRY,KAAMC,KAAKC,UAAUpB,GACrBO,QAAS,CACP,eAAgB,qBAGhBH,EAAMH,KAAKC,MAAQ,IAAMC,EAC7B,OAAOE,MAAMD,EAAKa,GAAST,MAAK,SAAAC,GAC9B,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,6BAMRf,GAEL,IAAIiB,EAAU,CACZX,OAAQ,SACRY,KAAMC,KAAKC,UAAUpB,GACrBO,QAAS,CACP,eAAgB,qBAIhBH,EAAMH,KAAKC,MAAQ,IAAMC,GAC7B,OAAOE,MAAMD,EAAKa,GAAST,MAAK,SAAAC,GAC9B,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,e,oCCnHFM,E,8RCQAC,E,uLAVKC,GAChB,IAAIC,EAAO,IAAIF,EAKf,OAJAE,EAAKC,SAAWF,EAASE,SACzBD,EAAKE,SAAW,IAAIL,EACpBG,EAAKE,SAAS1B,KAAOmB,KAAKQ,MAAMJ,EAASG,SAAS1B,MAClDwB,EAAKE,SAASvB,GAAKoB,EAASG,SAASvB,GAC9BqB,M,mNCIII,E,wLAVM5B,GACjB,IAAIE,EAAQ,IAAI0B,EAChB1B,EAAM2B,MAAQ,GAFQ,2BAGtB,YAAkB7B,EAAK6B,MAAvB,+CAA6B,KAApBC,EAAoB,QAC3B5B,EAAM2B,MAAME,KAAKT,EAAKU,WAAWF,KAJb,kFAMtB,OAAO5B,M,mOCPL+B,E,WAEJ,c,4FAAa,SACXhC,KAAKiC,SAAW,IAAInC,EAAS,CAC3BG,MAAO,iBAETD,KAAKkC,a,4DAGLlC,KAAKiC,SAASE,SAAS5B,MAAK,SAAA6B,GAC1B,IAAIC,EAAS,GADyB,uBAEtC,YAAiBD,EAAWC,OAA5B,+CAAmC,KAA3BC,EAA2B,QACjCD,EAAOP,KAAKH,EAAMY,YAAYD,KAHM,kFAKtCE,IAASC,SAASC,YAAgBL,OALpC,OAMS,SAAAM,GACPC,QAAQC,MAAMF,W,gCAKL,cAAIX","file":"4.bundle.js","sourcesContent":["/**\r\n * @class\r\n * */\r\nclass Resource {\r\n\r\n\r\n  /**\r\n   * @member {Object} routes\r\n   * @member {string} routes.get\r\n   * @member {string} routes.post\r\n   * @member {string} routes.create\r\n   * @member {string} routes.getAll\r\n   */\r\n  constructor(data){\r\n\r\n    this.route = data.route;\r\n    if(! this.route){\r\n      throw 'Нужен URL';\r\n    }\r\n\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  get(id){\r\n    if(! id){\r\n      throw 'Get only by \"id\"';\r\n    }\r\n\r\n    let options = {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n\r\n    let url = this.route + '/' + id;\r\n    return fetch(url, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  getAll(){\r\n\r\n    let options = {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n\r\n    let url = this.route;\r\n    return fetch(url, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  post(data){\r\n    data._token = _token;\r\n    let options = {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n    return fetch(this.route, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  put(id, data){\r\n    data._token = _token;\r\n    let options = {\r\n      method: 'put',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n    let url = this.route + '/' + id;\r\n    return fetch(url, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  delete(data){\r\n\r\n    let options = {\r\n      method: 'delete',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n\r\n    };\r\n    let url = this.route + '/' + id;\r\n    return fetch(url, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n}\r\n\r\nexport default Resource;","/**\r\n * @property {Int} id\r\n * @property {Object} data\r\n * */\r\nclass Template {\r\n\r\n}\r\n\r\nexport default Template","import Template from './Template';\r\n/**\r\n * @property {Template} template\r\n * @property {Object} settings\r\n * */\r\nclass Area {\r\n  static areaFabric(areaData){\r\n    let area = new Area();\r\n    area.settings = areaData.settings;\r\n    area.template = new Template();\r\n    area.template.data = JSON.parse(areaData.template.data);\r\n    area.template.id = areaData.template.id;\r\n    return area;\r\n  }\r\n}\r\n\r\nexport default Area","/**\r\n * @property {Area[]} areas\r\n * */\r\nimport Area from \"./Area\";\r\n\r\nclass Route {\r\n  static routeFabric(data){\r\n    let route = new Route();\r\n    route.areas = [];\r\n    for (let _area of data.areas){\r\n      route.areas.push(Area.areaFabric(_area))\r\n    }\r\n    return route;\r\n  }\r\n}\r\n\r\nexport default Route","import Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport Route from \"./Route\";\r\nimport appStore from \"../store/store\";\r\nimport {changeAppRoutes} from \"../store/routes/actions\";\r\n\r\nclass Routes {\r\n\r\n  constructor(){\r\n    this.resource = new Resource({\r\n      route: '/ajax/routes'\r\n    });\r\n    this.loadRoutes();\r\n  }\r\n  loadRoutes(){\r\n    this.resource.getAll().then(routesData=>{\r\n      let routes = [];\r\n      for(let _data of routesData.routes){\r\n        routes.push(Route.routeFabric(_data));\r\n      }\r\n      appStore.dispatch(changeAppRoutes(routes))\r\n    }).catch(err=>{\r\n      console.error(err);\r\n    });\r\n  }\r\n}\r\n\r\nexport default new Routes();"],"sourceRoot":""}