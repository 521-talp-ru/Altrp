{"version":3,"sources":["webpack:///../editor/src/js/classes/Resource.js","webpack:///./src/js/classes/Template.js","webpack:///./src/js/classes/Area.js","webpack:///./src/js/classes/Route.js","webpack:///./src/js/classes/Routes.js"],"names":["Resource","data","this","route","id","url","fetch","method","headers","_token","options","body","JSON","stringify","Template","Area","areaData","area","settings","template","Route","areas","_area","push","areaFabric","Routes","resource","loadRoutes","getAll","then","res","json","routesData","routes","_data","routeFabric","appStore","dispatch","changeAppRoutes","err","console","error"],"mappings":"0QAuGeA,E,WA1Fb,WAAYC,GAGV,G,4FAHe,SAEfC,KAAKC,MAAQF,EAAKE,OACbD,KAAKC,MACR,KAAM,Y,mDAONC,GACF,IAAKA,EACH,KAAM,mBAGR,IAOIC,EAAMH,KAAKC,MAAQ,IAAMC,EAC7B,OAAOE,MAAMD,EARC,CACZE,OAAQ,MACRC,QAAS,CACP,eAAgB,wB,+BAYpB,IAOIH,EAAMH,KAAKC,MACf,OAAOG,MAAMD,EARC,CACZE,OAAQ,MACRC,QAAS,CACP,eAAgB,wB,2BAWjBP,GACHA,EAAKQ,OAASA,OACd,IAAIC,EAAU,CACZH,OAAQ,OACRI,KAAMC,KAAKC,UAAUZ,GACrBO,QAAS,CACP,eAAgB,qBAGpB,OAAOF,MAAMJ,KAAKC,MAAOO,K,0BAMvBN,EAAIH,GACNA,EAAKQ,OAASA,OACd,IAAIC,EAAU,CACZH,OAAQ,MACRI,KAAMC,KAAKC,UAAUZ,GACrBO,QAAS,CACP,eAAgB,qBAGhBH,EAAMH,KAAKC,MAAQ,IAAMC,EAC7B,OAAOE,MAAMD,EAAKK,K,6BAKbT,GAEL,IAAIS,EAAU,CACZH,OAAQ,SACRI,KAAMC,KAAKC,UAAUZ,GACrBO,QAAS,CACP,eAAgB,qBAIhBH,EAAMH,KAAKC,MAAQ,IAAMC,GAC7B,OAAOE,MAAMD,EAAKK,Q,oCC3FPI,E,8RCQAC,E,uLAVKC,GAChB,IAAIC,EAAO,IAAIF,EAKf,OAJAE,EAAKC,SAAWF,EAASE,SACzBD,EAAKE,SAAW,IAAIL,EACpBG,EAAKE,SAASlB,KAAOe,EAASG,SAASlB,KACvCgB,EAAKE,SAASf,GAAKY,EAASG,SAASf,GAC9Ba,M,orCCIIG,E,wLAVMnB,GACjB,IAAIE,EAAQ,IAAIiB,EAChBjB,EAAMkB,MAAQ,GAFQ,UAGJpB,EAAKoB,OAHD,IAGtB,2BAA6B,KAApBC,EAAoB,QAC3BnB,EAAMkB,MAAME,KAAKR,EAAKS,WAAWF,KAJb,8BAMtB,OAAOnB,M,osCCPLsB,E,WAEJ,c,4FAAa,SACXvB,KAAKwB,SAAW,IAAI1B,EAAS,CAC3BG,MAAO,iBAETD,KAAKyB,a,4DAGLzB,KAAKwB,SAASE,SAASC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAClD,IAD8D,EAC1DC,EAAS,GADiD,IAE7CD,GAF6C,IAE9D,2BAA4B,KAApBE,EAAoB,QAC1BD,EAAOV,KAAKH,EAAMe,YAAYD,KAH8B,8BAK9DE,IAASC,SAASC,YAAgBL,OALpC,OAMS,SAAAM,GACPC,QAAQC,MAAMF,W,gCAKL,cAAId","file":"1.bundle.js","sourcesContent":["/**\r\n * @class\r\n * */\r\nclass Resource {\r\n\r\n\r\n  /**\r\n   * @member {Object} routes\r\n   * @member {string} routes.get\r\n   * @member {string} routes.post\r\n   * @member {string} routes.create\r\n   * @member {string} routes.getAll\r\n   */\r\n  constructor(data){\r\n\r\n    this.route = data.route;\r\n    if(! this.route){\r\n      throw 'Нужен URL';\r\n    }\r\n\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  get(id){\r\n    if(! id){\r\n      throw 'Get only by \"id\"';\r\n    }\r\n\r\n    let options = {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n\r\n    let url = this.route + '/' + id;\r\n    return fetch(url, options);\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  getAll(){\r\n\r\n    let options = {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n\r\n    let url = this.route;\r\n    return fetch(url, options);\r\n  }\r\n\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  post(data){\r\n    data._token = _token;\r\n    let options = {\r\n      method: 'post',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n    return fetch(this.route, options);\r\n  }\r\n\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  put(id, data){\r\n    data._token = _token;\r\n    let options = {\r\n      method: 'put',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n    let url = this.route + '/' + id;\r\n    return fetch(url, options);\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  delete(data){\r\n\r\n    let options = {\r\n      method: 'delete',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n\r\n    };\r\n    let url = this.route + '/' + id;\r\n    return fetch(url, options);\r\n  }\r\n}\r\n\r\nexport default Resource;","/**\r\n * @property {Int} id\r\n * @property {Object} data\r\n * */\r\nclass Template {\r\n\r\n}\r\n\r\nexport default Template","import Template from './Template';\r\n/**\r\n * @property {Template} template\r\n * @property {Object} settings\r\n * */\r\nclass Area {\r\n  static areaFabric(areaData){\r\n    let area = new Area();\r\n    area.settings = areaData.settings;\r\n    area.template = new Template();\r\n    area.template.data = areaData.template.data;\r\n    area.template.id = areaData.template.id;\r\n    return area;\r\n  }\r\n}\r\n\r\nexport default Area","/**\r\n * @property {Area[]} areas\r\n * */\r\nimport Area from \"./Area\";\r\n\r\nclass Route {\r\n  static routeFabric(data){\r\n    let route = new Route();\r\n    route.areas = [];\r\n    for (let _area of data.areas){\r\n      route.areas.push(Area.areaFabric(_area))\r\n    }\r\n    return route;\r\n  }\r\n}\r\n\r\nexport default Route","import Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport Route from \"./Route\";\r\nimport appStore from \"../store/store\";\r\nimport {changeAppRoutes} from \"../store/routes/actions\";\r\n\r\nclass Routes {\r\n\r\n  constructor(){\r\n    this.resource = new Resource({\r\n      route: '/ajax/routes'\r\n    });\r\n    this.loadRoutes();\r\n  }\r\n  loadRoutes(){\r\n    this.resource.getAll().then(res => res.json()).then(routesData=>{\r\n      let routes = [];\r\n      for(let _data of routesData){\r\n        routes.push(Route.routeFabric(_data));\r\n      }\r\n      appStore.dispatch(changeAppRoutes(routes))\r\n    }).catch(err=>{\r\n      console.error(err);\r\n    });\r\n  }\r\n}\r\n\r\nexport default new Routes();"],"sourceRoot":""}